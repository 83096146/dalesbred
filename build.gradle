buildscript {
    repositories {
        maven { url 'http://repo.springsource.org/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.build.gradle:propdeps-plugin:0.0.5")
    }
}

configure(allprojects) { project ->
    group = 'fi.evident.dalesbred'
    version = '0.6.1-SNAPSHOT'
}

configure(subprojects) { project ->
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-maven'

    ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    repositories {
        mavenCentral()
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    task sourceJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives jar

        archives javadocJar
        archives sourceJar
    }

    signing {
        required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    javadoc {
        options.addStringOption('Xdoclint:none', '-quiet')
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "file:${rootProject.projectDir}/build/repo")
                // repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                //repository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                //    authentication(userName: sonatypeUsername, password: sonatypePassword)
                //}

                pom.whenConfigured { pom ->
                    pom.project {
                        name project.name
                        packaging 'jar'
                        description project.description
                        url 'https://bitbucket.org/evidentsolutions/dalesbred'
                        inceptionYear '2012'

                        organization {
                            name 'Evident Solutions'
                            url 'http://www.evident.fi'
                        }

                        licenses {
                            license {
                                name 'MIT License'
                                url 'http://opensource.org/licenses/mit-license.php'
                                distribution 'repo'
                            }
                        }

                        scm {
                            url 'https://bitbucket.org/evidentsolutions/dalesbred'
                            connection 'scm:git:https://bitbucket.org/evidentsolutions/dalesbred.git'
                            developerConnection 'scm:git:ssh://git@bitbucket.org/evidentsolutions/dalesbred.git'
                        }

                        developers {
                            developer {
                                id 'komu'
                                name 'Juha Komulainen'
                            }
                        }

                        issueManagement {
                            system = 'Bitbucket'
                            url = 'https://bitbucket.org/evidentsolutions/dalesbred/issues'
                        }
                    }

                    // Test dependencies are not needed in pom
                    pom.dependencies.removeAll { dep ->
                        dep.scope == "test"
                    }
                }
            }
        }
    }
}

project(':dalesbred') {
    description = 'Dalesbred'

    dependencies {
        optional 'com.intellij:annotations:12.0'
        optional 'postgresql:postgresql:9.1-901.jdbc4'
        optional 'org.hsqldb:hsqldb:2.2.9'
        optional 'mysql:mysql-connector-java:5.1.26'
        optional 'joda-time:joda-time:2.1'
        optional 'aopalliance:aopalliance:1.0'
        optional 'com.google.inject:guice:3.0'
        optional 'org.springframework:spring-context:3.2.4.RELEASE'
        optional 'org.springframework:spring-jdbc:3.2.4.RELEASE'
        testCompile 'junit:junit:4.10'
        testCompile 'org.mockito:mockito-all:1.9.0'
    }
}

project(':dalesbred-junit') {
    description = 'Dalesbred JUnit-support'

    dependencies {
        compile project(':dalesbred')
        compile 'junit:junit:4.10'
        compile 'javax.inject:javax.inject:1'
        optional 'com.intellij:annotations:12.0'
        testCompile 'org.hsqldb:hsqldb:2.2.9'
    }
}
