import org.ajoberstar.grgit.*

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'http://repo.springsource.org/plugins-release' }
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:0.7.0'
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
        classpath 'org.ajoberstar:gradle-git:0.8.0'
    }
}

configure(allprojects) { project ->
    group = 'fi.evident.dalesbred'

    apply plugin: 'java'

    task buildDocs {
        group 'documentation'
        description 'Builds all documentation.'
    }

    repositories {
        mavenCentral()
    }
}

configure(rootProject) { project ->
    apply plugin: 'grgit-release'
    apply plugin: 'asciidoctor'
    apply from: "${rootProject.projectDir}/gradle/ssh-support.gradle"

    def releaseVersion
    release {
        grgit = Grgit.open(project.file('.'))
        useBuildMetadataForStage = { stage -> stage != 'final' && stage != 'rc' }
        releaseVersion = version
    }

    // workaround for https://github.com/ajoberstar/gradle-git/issues/54
    project.version = 'undefined'
    gradle.taskGraph.whenReady {
        project.version = releaseVersion
    }

    buildDocs.dependsOn asciidoctor

    asciidoctor {
        baseDir = file('src/asciidoc')
        options = new fi.evident.dalesbred.build.LazyMap({[
                eruby: 'erubis',
                attributes: [
                        icons: 'font',
                        'iconfont-cdn': 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/3.2.1/css/font-awesome.min.css',
                        prettifydir: 'https://cdnjs.cloudflare.com/ajax/libs/prettify/r298',
                        toc: 'right',
                        'source-highlighter': 'prettify',
                        revnumber: project.version.toString(),
                        docinfo: "",
                        javadocBase: "https://dalesbred.evident.fi/docs/${project.version.toString()}/api/?"
                ]
        ]})
    }

    task publishWebsite(type: fi.evident.dalesbred.build.SshCopyTask) {
        group 'publishing'
        description 'Publishes the website to dalesbred.evident.fi'
        dependsOn installSshTasks

        sourceDirectory = "${project.projectDir}/website/src"
        targetDirectory = "/var/www/dalesbred"
    }

    task publishReferenceDocumentation(type: fi.evident.dalesbred.build.SshCopyTask) {
        group 'publishing'
        description 'Publishes the reference documentation to dalesbred.evident.fi'
        dependsOn installSshTasks, buildDocs

        sourceDirectory = "${project.projectDir}/build/asciidoc"
        targetDirectory = { "/var/www/dalesbred/docs/${project.version}/reference" }
    }
}

configure(subprojects) { project ->
    apply plugin: 'nexus'
    apply from: "${rootProject.projectDir}/gradle/publish-maven.gradle"

    buildDocs.dependsOn javadoc

    ext.isReleaseVersion = { !version.endsWith("SNAPSHOT") }
    ext.springVersion = '4.0.3.RELEASE'
    ext.junitVersion = '4.11'
    ext.jetbrainsAnnotationsVersion = '13.0'
    ext.hsqldbVersion = '2.3.2'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    javadoc {
        options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
        options.header = project.name
        options.links('http://docs.oracle.com/javase/8/docs/api/',
                'http://docs.spring.io/spring/docs/current/javadoc-api/',
                'http://www.joda.org/joda-time/apidocs/')
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

project(':dalesbred') {
    description = 'Dalesbred - a database access library'

    dependencies {
        compile 'joda-time:joda-time:2.3'
        compile 'aopalliance:aopalliance:1.0'
        compile 'com.google.inject:guice:3.0'
        compile "org.springframework:spring-context:$springVersion"
        compile "org.springframework:spring-jdbc:$springVersion"
        compile "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"

        compile 'org.postgresql:postgresql:9.3-1101-jdbc41'

        testCompile "org.hsqldb:hsqldb:$hsqldbVersion"
        testCompile 'mysql:mysql-connector-java:5.1.30'
        testCompile "junit:junit:$junitVersion"
        testCompile 'org.mockito:mockito-core:1.9.5'
    }

    apply plugin: 'osgi'

    jar {
        manifest {
            instruction 'Import-Package', '' +
                    'com.google.inject.*;resolution:=optional,' +
                    'javax.inject.*;resolution:=optional,' +
                    'org.aopalliance.intercept.*;resolution:=optional,' +
                    'org.joda.time.*;resolution:=optional,' +
                    'org.springframework.*;resolution:=optional,' +
                    'org.postgresql.*;resolution:=optional,' +
                    '*'
        }
    }
}

project(':dalesbred-junit') {
    description = 'Dalesbred JUnit-support'

    dependencies {
        compile project(':dalesbred')
        compile "junit:junit:$junitVersion"
        compile 'javax.inject:javax.inject:1'

        compile "org.jetbrains:annotations:$jetbrainsAnnotationsVersion"

        testCompile "org.hsqldb:hsqldb:$hsqldbVersion"
    }
}
